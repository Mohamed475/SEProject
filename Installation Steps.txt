1. npm install (for installing all used packages and libraries)
2. npm run start-dev (for running thr application locally and start development proccess)

Notice: The projecct will connect to the database directly that hosted in mongo cloude there is no need to connect it manually.

For API Testing.
1. Tours endpoints.
	1. 127.0.0.1:3000/api/v1/tours?duration[gte]=7&sort=price 		(GET)
	2. 127.0.0.1:3000/api/v1/tours/id 				(GET)
	3. 127.0.0.1:3000/api/v1/tours 					(POST)
	4. 127.0.0.1:3000/api/v1/tours/id 				(PATCH)
	5. 127.0.0.1:3000/api/v1/tours/id 				(DELETE)
	6. 127.0.0.1:3000/api/v1/tours/top-5-cheap 			(GET)
	7. 127.0.0.1:3000/api/v1/tours/monthly-plan/2021 ( not related to the bussnies logic it's for learning purpes)

2. Reviews.
	1. 127.0.0.1:3000/api/v1/reviews         	(GET)
	2. 127.0.0.1:3000/api/v1/reviews/id 	(GET)
	3. 127.0.0.1:3000/api/v1/reviews 	(POST)
	4. 127.0.0.1:3000/api/v1/reviews/ 	(PATCH)
	5. 127.0.0.1:3000/api/v1/reviews/id 	(DELTE)

3. Users.
	1. 127.0.0.1:3000/api/v1/users?role=user 		(GET) FOR DEV.
	2. 127.0.0.1:3000/api/v1/users/id 		(GET)
	3. 127.0.0.1:3000/api/v1/users/ 			(PATCH)
	4. 127.0.0.1:3000/api/v1/users/id		(DELTE)
	5. 127.0.0.1:3000/api/v1/users/me 		(GET)
	6. 127.0.0.1:3000/api/v1/users/updateMe 		(PATCH)
	7. 127.0.0.1:3000/api/v1/users/deleteMe 		(DELETE)

4. Authentication & Authorization.
	1. 127.0.0.1:3000/api/v1/users/signup 			(POST)
	2. 127.0.0.1:3000/api/v1/users/login 			(POST)
	3. 127.0.0.1:3000/api/v1/users/forgotPassword 		(POST)
	4. 127.0.0.1:3000/api/v1/users/resetPassword/id 		(PATCH)
	5. 127.0.0.1:3000/api/v1/users/updateMyPassword 		(PATCH)

5. Bookings.
	1. 127.0.0.1:3000/api/v1/bookings 		(GET)
	2. 127.0.0.1:3000/api/v1/bookings/id 		(GET)


Notice: There are some routes will not work until you get authenticated first. (login || signup)

Total working hours: 150H.

